coproc needs to support these types:
    u8
    u16
    u32
++	u64
    i8
    i16
    i32
++	i64
    f16
    f32
++	f64
++	f128
    c16
    c32
++	c64
++	c128
	fractions
++	algebraic fractions
++	special constants
    2D points
    3D points
coprocessor needs to support these instructions:
	+
	-
	*
	/
	^
	x => fraction
	x => decimal
++	fraction <=> decimal
	x cubed
	cube root of x
	nth root of x
	min(f(x)) | a <= x <= b
	max(f(x)) | a <= x <= b
++	min(f(x)) | x : Real
++	max(f(x)) | x : Real
	(d/dx) f(x) | x = {constant}
++	(d/dx) f(x)
	integral(f(x)) | a <= x <= b
++	integral(f(t)) | 0 <= t <= x
	sum(expr,var,lower,upper)
	log(val,base)
	solve(expr...)
	abs
	round
	iPart/trunc
	fPart/frac
	int/floor
++	ceil
	min(x, y[, ...])
	max(x, y[, ...])
	lcm(x, y[, ...])
	gcd(x, y[, ...])
	remainder(x,y)
	mod(x,y)
	fraction <=> decimal
	fraction <=> mixed fraction
	conj
	Re
	Im
	angle
	abs
	Rect => Polar
	Polar => Rect
++	Rect <=> Polar